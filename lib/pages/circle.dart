import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    debugShowCheckedModeBanner: false,
    home: SmartAgriPage(),
  ));
}

class SmartAgriPage extends StatelessWidget {
  const SmartAgriPage({Key? key}) : super(key: key);

  final String imageUrl = 'https://i.postimg.cc/bYSCtBb7/image.png';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF4F9F4),
      appBar: AppBar(
        backgroundColor: Colors.green.shade700,
        title: const Text(
          '‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡ßÉ‡¶∑‡¶ø', // Smart Agriculture
          style: TextStyle(fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
        elevation: 6,
        shadowColor: Colors.green.shade300,
        actions: [
          IconButton(
            icon: const Icon(Icons.notifications),
            onPressed: () {
              // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
              // View notifications
            },
          ),
          IconButton(
            icon: const Icon(Icons.settings),
            onPressed: () {
              // ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏ ‡¶Æ‡ßá‡¶®‡ßÅ
              // Settings menu
            },
          ),
        ],
      ),
      body: LayoutBuilder(
        builder: (context, constraints) {
          bool isWide = constraints.maxWidth > 700;

          return isWide
              ? Row(
                  children: [
                    Expanded(child: buildImage()),
                    Expanded(child: buildFeatureList()),
                  ],
                )
              : SingleChildScrollView(
                  child: Column(
                    children: [
                      buildImage(),
                      buildFeatureList(),
                    ],
                  ),
                );
        },
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: '‡¶π‡ßã‡¶Æ', // Home
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.analytics),
            label: '‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£', // Analytics
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: '‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤', // Profile
          ),
        ],
        selectedItemColor: Colors.green.shade800,
      ),
    );
  }

  // üåø Image section with dummy weather data
  Widget buildImage() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        children: [
          ClipRRect(
            borderRadius: BorderRadius.circular(20),
            child: Stack(
              children: [
                Image.network(
                  imageUrl,
                  fit: BoxFit.cover,
                  height: 300,
                  width: double.infinity,
                ),
                Positioned(
                  bottom: 10,
                  left: 10,
                  child: Container(
                    padding: const EdgeInsets.all(8),
                    decoration: BoxDecoration(
                      color: Colors.black.withOpacity(0.6),
                      borderRadius: BorderRadius.circular(10),
                    ),
                    child: const Row(
                      children: [
                        Icon(Icons.location_on, color: Colors.white, size: 16),
                        SizedBox(width: 4),
                        Text(
                          '‡¶¢‡¶æ‡¶ï‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂', // Dhaka, Bangladesh
                          style: TextStyle(color: Colors.white),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(height: 16),
          // Dummy weather data
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(15),
              boxShadow: [
                BoxShadow(
                  color: Colors.green.withOpacity(0.1),
                  blurRadius: 8,
                  offset: const Offset(0, 4),
                ),
              ],
            ),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: [
                _buildWeatherItem(Icons.thermostat, '‡ß©‡ß®¬∞C', '‡¶§‡¶æ‡¶™‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ'), // 32¬∞C, Temperature
                _buildWeatherItem(Icons.water_drop, '‡ß¨‡ß´%', '‡¶Ü‡¶∞‡ßç‡¶¶‡ßç‡¶∞‡¶§‡¶æ'), // 65%, Humidity
                _buildWeatherItem(Icons.air, '‡ßß‡ß¶ km/h', '‡¶¨‡¶æ‡¶§‡¶æ‡¶∏'), // 10 km/h, Wind
                _buildWeatherItem(Icons.wb_sunny, '‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø‡¶æ‡¶≤‡ßã‡¶ï', '‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞'), // Sunny, Clear
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildWeatherItem(IconData icon, String value, String label) {
    return Column(
      children: [
        Icon(icon, color: Colors.green.shade700),
        const SizedBox(height: 4),
        Text(
          value,
          style: TextStyle(
            fontWeight: FontWeight.bold,
            color: Colors.green.shade800,
          ),
        ),
        const SizedBox(height: 2),
        Text(
          label,
          style: const TextStyle(fontSize: 12),
        ),
      ],
    );
  }

  // üìã Feature List with dummy data
  Widget buildFeatureList() {
    final List<Map<String, dynamic>> features = [
      {
        'title': '‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞ ‡¶™‡¶∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£', // Field Monitoring
        'description': '‡¶Æ‡¶æ‡¶ü‡¶ø‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶ì ‡¶´‡¶∏‡¶≤‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®‡•§', // Track real-time soil & crop data
        'icon': Icons.grass,
        'color': Colors.lightGreen,
        'dummyData': '‡ß´‡¶ü‡¶ø ‡¶∏‡ßá‡¶®‡ßç‡¶∏‡¶∞ ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º', // 5 sensors active
      },
      {
        'title': '‡¶´‡¶∏‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ', // Crop Management
        'description': '‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶´‡¶∏‡¶≤‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶ì ‡¶Ø‡¶§‡ßç‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®‡•§', // View and manage crops
        'icon': Icons.spa,
        'color': Colors.teal,
        'dummyData': '‡ßÆ‡¶ü‡¶ø ‡¶´‡¶∏‡¶≤ ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°', // 8 crop records
      },
      {
        'title': '‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶∏‡ßá‡¶ö', // Irrigation Automation
        'description': '‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡¶æ‡¶®‡¶ø ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÇ‡¶ö‡ßÄ‡•§', // Automated water scheduling
        'icon': Icons.opacity,
        'color': Colors.blue,
        'dummyData': '‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶∏‡ßá‡¶ö: ‡ß¨ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶™‡¶∞‡ßá', // Next irrigation: 6 hours later
      },
      {
        'title': '‡¶∞‡ßã‡¶ó ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏', // Disease Prediction
        'description': '‡¶´‡¶∏‡¶≤‡ßá‡¶∞ ‡¶∞‡ßã‡¶ó ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§', // Detect crop diseases early
        'icon': Icons.health_and_safety,
        'color': Colors.orange,
        'dummyData': '‡¶ï‡ßã‡¶® ‡¶∞‡ßã‡¶ó ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø', // No diseases detected
      },
      {
        'title': '‡¶∏‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ', // Fertilizer Management
        'description': '‡¶∏‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ó‡ßá‡¶∞ ‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂ ‡¶™‡¶æ‡¶®‡•§', // Get fertilizer recommendations
        'icon': Icons.eco,
        'color': Colors.brown,
        'dummyData': '‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶∏‡¶æ‡¶∞: ‡ß© ‡¶¶‡¶ø‡¶® ‡¶™‡¶∞‡ßá', // Next fertilizer: 3 days later
      },
      {
        'title': '‡¶´‡¶∏‡¶≤ ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶¶‡ßç‡¶¨‡¶æ‡¶£‡ßÄ', // Yield Prediction
        'description': '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶´‡¶∏‡¶≤‡ßá‡¶∞ ‡¶´‡¶≤‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§', // Estimate your crop yield
        'icon': Icons.trending_up,
        'color': Colors.purple,
        'dummyData': '‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡¶æ‡¶∂‡¶ø‡¶§ ‡¶´‡¶≤‡¶®: ‡ß®‡ß´‡ß¶ ‡¶ï‡ßá‡¶ú‡¶ø', // Expected yield: 250kg
      },
    ];

    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 20.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.only(bottom: 10, top: 10),
            child: Text(
              '‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π', // Features
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.green.shade800,
              ),
            ),
          ),
          ...features.map((feature) => buildFeatureCard(feature)).toList(),
          const SizedBox(height: 16),
          // Dummy news section
          Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(15),
              boxShadow: [
                BoxShadow(
                  color: Colors.green.withOpacity(0.1),
                  blurRadius: 8,
                  offset: const Offset(0, 4),
                ),
              ],
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    Icon(Icons.new_releases, color: Colors.green.shade800),
                    const SizedBox(width: 8),
                    Text(
                      '‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶', // Agriculture News
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        color: Colors.green.shade800,
                        fontSize: 18,
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 8),
                Text(
                  '‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ: ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø‡¶æ‡¶≤‡ßã‡¶ï, ‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡¶æ ‡¶®‡ßá‡¶á‡•§ ‡¶¨‡ßã‡¶∞‡ßã ‡¶ß‡¶æ‡¶® ‡¶ö‡¶æ‡¶∑‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶™‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶∏‡¶Æ‡¶Ø‡¶º‡•§', // Today's weather: Full sunshine, no chance of rain. Good time for Boro rice cultivation.
                  style: TextStyle(color: Colors.grey.shade700),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  // ‚ú® Enhanced Feature Card with dummy data
  Widget buildFeatureCard(Map<String, dynamic> feature) {
    return Container(
      margin: const EdgeInsets.symmetric(vertical: 8),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(15),
        boxShadow: [
          BoxShadow(
            color: Colors.green.withOpacity(0.1),
            blurRadius: 8,
            offset: const Offset(0, 4)),
        ],
      ),
      child: ListTile(
        leading: Container(
          padding: const EdgeInsets.all(10),
          decoration: BoxDecoration(
            color: feature['color'].withOpacity(0.2),
            shape: BoxShape.circle,
          ),
          child: Icon(
            feature['icon'],
            color: feature['color'],
          ),
        ),
        title: Text(
          feature['title'],
          style: const TextStyle(
            fontWeight: FontWeight.bold,
            fontSize: 16,
          ),
        ),
        subtitle: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              feature['description'],
              style: TextStyle(color: Colors.grey.shade600),
            ),
            const SizedBox(height: 4),
            Text(
              feature['dummyData'],
              style: TextStyle(
                color: Colors.green.shade700,
                fontSize: 12,
              ),
            ),
          ],
        ),
        trailing: Icon(
          Icons.arrow_forward_ios,
          size: 16,
          color: Colors.green.shade800,
        ),
        onTap: () {
          // ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶°‡¶ø‡¶ü‡ßá‡¶á‡¶≤‡¶∏ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          // View feature details
        },
      ),
    );
  }
}